{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Parquet1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText3",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText4",
						"type": "DatasetReference"
					},
					"name": "sink4"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText5",
						"type": "DatasetReference"
					},
					"name": "sink5"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText6",
						"type": "DatasetReference"
					},
					"name": "sink6"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "sink7"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "sink8"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				},
				{
					"name": "aggregate3"
				},
				{
					"name": "select3"
				},
				{
					"name": "aggregate4"
				},
				{
					"name": "select4"
				},
				{
					"name": "aggregate5"
				},
				{
					"name": "select5"
				},
				{
					"name": "aggregate6"
				},
				{
					"name": "select6"
				},
				{
					"name": "select7"
				},
				{
					"name": "aggregate7"
				},
				{
					"name": "select8"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Date as date,",
				"          hour as integer,",
				"          Browser as string,",
				"          DeviceType as string,",
				"          Path as string,",
				"          unique_visitors as long,",
				"          OS as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['/ecommerce-user/*.parquet']) ~> source1",
				"source1 aggregate(groupBy(Browser),",
				"     each(match(name!='Browser'), $$ = first($$))) ~> aggregate1",
				"source1 aggregate(groupBy(Path),",
				"     each(match(name!='Path'), $$ = first($$))) ~> aggregate3",
				"aggregate3 select(mapColumn(",
				"          Path",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"source1 aggregate(groupBy(OS),",
				"     each(match(name!='OS'), $$ = first($$))) ~> aggregate4",
				"aggregate4 select(mapColumn(",
				"          OS",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"source1 aggregate(groupBy(Date),",
				"     each(match(name!='Date'), $$ = first($$))) ~> aggregate5",
				"aggregate5 select(mapColumn(",
				"          Date",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select5",
				"source1 aggregate(groupBy(hour),",
				"     each(match(name!='hour'), $$ = first($$))) ~> aggregate6",
				"aggregate6 select(mapColumn(",
				"          hour",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select6",
				"aggregate1 select(mapColumn(",
				"          Browser",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select7",
				"source1 aggregate(groupBy(DeviceType),",
				"     each(match(name!='DeviceType'), $$ = first($$))) ~> aggregate7",
				"aggregate7 select(mapColumn(",
				"          DeviceType",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select8",
				"select3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink3",
				"select4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink4",
				"select5 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink5",
				"select6 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink6",
				"select7 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink7",
				"select8 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink8"
			]
		}
	}
}